#include "msp.h"

void delay(int d);
void delay(int d)
{
	int i,j;
	for(i=0; i<d; i++){
		for(j=750; j>0; j--); 
	}
}


int main(void)
{
	WDT_A ->CTL = WDT_A_CTL_PW | WDT_A_CTL_HOLD;
	
	P2->DIR |= BIT0|BIT1|BIT2;
	P2->OUT |= BIT0|BIT1|BIT2;
	
	while(1)
	{
		P2->OUT^=(BIT0|BIT1|BIT2);
		delay(1000);
	}
}



#include "msp.h"

void delay(int d);
int z;
int main(void)
{
	WDT_A ->CTL = WDT_A_CTL_PW | WDT_A_CTL_HOLD;
	
	P2->DIR |= BIT0|BIT1|BIT2;
	P2->OUT |= BIT0|BIT1|BIT2;
	P1->DIR &= ~BIT1;
	P1->REN |= BIT1;
	P1->OUT |=BIT1;
	
	P1->IE |= BIT1;
	P1->IES &= ~BIT1;
	P1->IFG &= ~BIT1;

	
	NVIC_EnableIRQ(PORT1_IRQn);  //(1<<(35&31))
	__enable_interrupts();
	
	
	while(1);
	
}

void PORT1_IRQHandler(void)
{
		
		if((P1->IFG & BIT1))
		{
			P2->OUT |=(BIT0|BIT1|BIT2);
			delay(500);
			P2->OUT &=~(BIT0|BIT1|BIT2);
		}
		
		P1->IFG &= ~BIT1;
}

void delay(int d)
{
	int i,j;
	for(i=0; i<d; i++)
	{
		for(j=750; j>0; j--); 
	}
}


#include "msp.h"

int i;
int main(void)
{
	WDT_A ->CTL = WDT_A_CTL_PW | WDT_A_CTL_HOLD;
	
	P2->DIR |= BIT0|BIT1|BIT2;
	


	TIMER32_1->CONTROL |= BIT6|BIT1|TIMER32_CONTROL_PRESCALE_0;
	//TIMER32_1->CONTROL &= ~(1<<3|1<<2);
	TIMER32_1->LOAD = 3000000-1;

	__enable_irq();
	NVIC->ISER[0] = 1 << ((T32_INT1_IRQn) & 31);
	
	
	TIMER32_1->CONTROL |= BIT5|BIT7;
	
	while(1);
	
}
void T32_1_IRQHandler(void)
{
		TIMER32_1->INTCLR=0;
		P2->OUT ^=(BIT0|BIT1|BIT2);
}


#include "msp.h"

void delay(int d);
int z;
int main(void)
{
	WDT_A ->CTL = WDT_A_CTL_PW | WDT_A_CTL_HOLD;
	
	P2->DIR |= BIT0|BIT1|BIT2;
	P2->OUT |= BIT0|BIT1|BIT2;
	P1->DIR &= ~BIT1;
	P1->REN |= BIT1;
	P1->OUT |=BIT1;
	
	P1->IE |= BIT1;
	P1->IES &= ~BIT1;
	P1->IFG &= ~BIT1;

	
	NVIC_EnableIRQ(PORT1_IRQn);  //(1<<(35&31))
	__enable_interrupts();
	
	
	while(1);
	
}

void PORT1_IRQHandler(void)
{
		
		if((P1->IFG & BIT1))
		{
			P2->OUT |=(BIT0|BIT1|BIT2);
			delay(500);
			P2->OUT &=~(BIT0|BIT1|BIT2);
		}
		
		P1->IFG &= ~BIT1;
}

void delay(int d)
{
	int i,j;
	for(i=0; i<d; i++)
	{
		for(j=750; j>0; j--); 
	}
}